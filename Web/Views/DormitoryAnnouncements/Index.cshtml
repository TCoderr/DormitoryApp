@using Web.Models
@using PagedList.Mvc;

@model PagedList.IPagedList<Web.Models.DormitoryAnnouncement>
<link href="~/Content/PagedList.css" rel="stylesheet" />


@{
    ViewBag.Title = "Announcements";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<h3 class="display-5 pb-3 mb-3 border-bottom">Announcement List</h3>


@{
    var user = Session["User"] as User;
}

@if (user != null && user.UserRole != Web.Models.User.Role.Student)
{
    <p class="text-end text-right">
        <a class="btn btn-success" href="@Url.Action("Create")"><i class="fas fa-plus"></i> Add New Announcement</a>
    </p>

}

@using (Html.BeginForm("Index", "DormitoryAnnouncements", FormMethod.Get))
{
    <div class="row">
        <div class="col-3">
            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control", placeholder = "Announcement" })
        </div>
        <div class="col-2">
            <button type="submit" class="btn btn-dark btn-sm"> <i class="fas fa-search"></i> Search</button>
        </div>
    </div>
}


<table class="table table-striped mt-4">
    <tr>
        <th>
            Announcement
        </th>
        <th>
            Is Published
        </th>
        <th>
            @Html.ActionLink("Published Date", "Index", new { sortOrder = ViewBag.PublishedDateSortParm, currentFilter = ViewBag.CurrentFilter })

        </th>

        <th></th>
    </tr>
    @if (Model != null)
    {
        foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Announcement)
                </td>
                <td>
                    @if (item.IsPublished)
                    {
                        <span>YES</span>
                    }
                    else
                    {

                        <span>NO</span>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PublishedDate)
                </td>
                <td>

                    @if (user.UserRole != Web.Models.User.Role.Student)
                    {

                        <a class="btn btn-primary btn-sm text-white" href="@Url.Action("Edit" , new { id = item.Id })"><i class="fas fa-pencil-alt"></i> Edit</a>
                        <a class="btn btn-info btn-sm" href="@Url.Action("Details", new { id = item.Id })"><i class="fas fa-clipboard-list"></i> Details</a>
                        <a class="btn btn-danger btn-sm text-white" style="cursor: pointer !important;" data-toggle="modal" data-target="#deleteModal" onclick="ShowDeleteModal(@item.Id);">
                            <i class="fas fa-trash"></i> Delete

                        </a>

                    }

                </td>
            </tr>
        }
    }


</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))



<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Delete Operation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Yes</button>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <script>

        function ShowDeleteModal(id) {
            console.log(id);
        }

    </script>
}
